on: 0.2
env:
    variables:
          AWS_REGION: eu-north-1
              EKS_CLUSTER_NAME: k3s-lab
              phases:
                  install:
                        commands:
                                - curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
                                      - pip3 install --upgrade awscli jq
                                        pre_build:
                                              commands:
                                                      - echo Logging into Amazon ECR...
                                                            - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
                                                                  - TAG="${CODEBUILD_SOURCE_VERSION:-local}.$(date +%Y%m%d%H%M%S)"
                                                                        - IMAGE="${REPOSITORY_URI}:${TAG}"
                                                                              - sed -i "s@CONTAINER_IMAGE@${IMAGE}@" hello-k8s.yml
                                                                                build:
                                                                                      commands:
                                                                                              - echo Build and push image $IMAGE
                                                                                                    - docker build -t $IMAGE .
                                                                                                          - docker push $IMAGE
                                                                                                                - echo Create k3d cluster for testing
                                                                                                                      - k3d cluster create ci --wait --port 8080:80@loadbalancer
                                                                                                                            - export KUBECONFIG="$(k3d kubeconfig write ci)"
                                                                                                                                  - ./create_secret.sh
                                                                                                                                        - kubectl apply -f hello-k8s.yml
                                                                                                                                              - ./unit_test.sh
                                                                                                                                                post_build:
                                                                                                                                                      commands:
                                                                                                                                                              - echo Cleaning up k3d cluster
                                                                                                                                                                    - k3d cluster delete ci
                                                                                                                                                                          - echo Deploying to Amazon EKS...
                                                                                                                                                                                - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
                                                                                                                                                                                      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
                                                                                                                                                                                            - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
                                                                                                                                                                                                  - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
                                                                                                                                                                                                        - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
                                                                                                                                                                                                              - kubectl apply -f hello-k8s.yml
                                                                                                                                                                                                                    - printf '[{"name":"hello-k8s","imageUri":"%s"}]' $IMAGE > build.json
                                                                                                                                                      artifacts:
                                                                                                                                                          files:
                                                                                                                                                                - build.json
